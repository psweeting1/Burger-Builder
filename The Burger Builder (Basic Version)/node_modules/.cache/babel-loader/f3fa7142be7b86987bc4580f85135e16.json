{"ast":null,"code":"import _defineProperty from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/User1/Documents/test-projects/Burger-Builder/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import Aux from'../../hoc/Aux';import Burger from'../../components/Burger/Burger';import BuildControls from'../../components/Burger/BuildControls/BuildControls';//Global variable (Global variables are in capitals)\nvar INGREDIENT_PRICES={salad:0.5,cheese:0.4,meat:1.3,bacon:0.7};var BurgerBuilder=/*#__PURE__*/function(_Component){_inherits(BurgerBuilder,_Component);function BurgerBuilder(){var _getPrototypeOf2;var _this;_classCallCheck(this,BurgerBuilder);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={ingredients:{salad:0,bacon:0,cheese:0,meat:0},totalPrice:4.0,purchaseAble:false};_this.addIngredientHandler=function(type){//Yes you can do this in less lines, but for training purposes it's laid out simple.\nvar oldCount=_this.state.ingredients[type];var updatedCount=oldCount+1;var updatedIngredients=_objectSpread({},_this.state.ingredients);updatedIngredients[type]=updatedCount;var priceAddition=INGREDIENT_PRICES[type];var oldPrice=_this.state.totalPrice;var newPrice=oldPrice+priceAddition;_this.setState({totalPrice:newPrice,ingredients:updatedIngredients});_this.updatePurchaseState(updatedIngredients);};_this.removeIngredientHandler=function(type){//Yes you can do this in less lines, but for training purposes it's laid out simple.\nvar oldCount=_this.state.ingredients[type];// Stops crashes if less than zero ingredients.\nif(oldCount<=0){return;}var updatedCount=oldCount-1;var updatedIngredients=_objectSpread({},_this.state.ingredients);updatedIngredients[type]=updatedCount;var priceAddition=INGREDIENT_PRICES[type];var oldPrice=_this.state.totalPrice;var newPrice=oldPrice-priceAddition;_this.setState({totalPrice:newPrice,ingredients:updatedIngredients});_this.updatePurchaseState(updatedIngredients);};return _this;}_createClass(BurgerBuilder,[{key:\"updatePurchaseState\",value:function updatePurchaseState(ingredients){var sum=Object.keys(ingredients).map(function(igKey){return ingredients[igKey];}).reduce(function(sum,el){return sum+el;},0);this.setState({purchaseAble:sum>0});console.log(\"I'm called\");}},{key:\"render\",value:function render(){var disabledInfo=_objectSpread({},this.state.ingredients);for(var key in disabledInfo){// Will update disabledInfo state with true or false\ndisabledInfo[key]=disabledInfo[key]<=0;}return React.createElement(Aux,null,React.createElement(Burger,{ingredients:this.state.ingredients}),React.createElement(BuildControls,{ingredientAdded:this.addIngredientHandler,ingredientRemoved:this.removeIngredientHandler,price:this.state.totalPrice,purchasable:this.state.purchaseAble,disabled:disabledInfo}));}}]);return BurgerBuilder;}(Component);export default BurgerBuilder;","map":{"version":3,"sources":["/Users/User1/Documents/test-projects/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseAble","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","el","console","log","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\n//Global variable (Global variables are in capitals)\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    //This is an object, not an array, need to convert this using Object Mapping to an Array.\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4.0,\n        purchaseAble: false\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n            return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({purchaseAble: sum > 0});\n        console.log(\"I'm called\")\n    }\n\n    addIngredientHandler = (type) => {\n        //Yes you can do this in less lines, but for training purposes it's laid out simple.\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        //Yes you can do this in less lines, but for training purposes it's laid out simple.\n        const oldCount = this.state.ingredients[type];\n        // Stops crashes if less than zero ingredients.\n        if(oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n     render() {\n        const disabledInfo = {\n            // This is a copy of the state for ingredients.\n            ...this.state.ingredients\n        }\n        for (let key in disabledInfo) {\n            // Will update disabledInfo state with true or false\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n          return (\n               <Aux>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchaseAble}\n                    disabled={disabledInfo}/>\n               </Aux>\n          );\n     }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}