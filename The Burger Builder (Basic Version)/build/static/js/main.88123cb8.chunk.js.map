{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/layout.module.css","components/Burger/Burger.module.css","hoc/Aux.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","Aux","className","styles","content","BurgerIngredient","ingredient","this","type","style","breadBottom","breadTop","seeds1","seeds2","meat","cheese","bacon","salad","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","less","onClick","removed","disabled","more","added","controls","buildControls","price","toFixed","ctrl","BuildControl","ingredientAdded","ingredientRemoved","orderButton","purchaseAble","INGREDIENT_PRICES","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","sum","console","log","disabledInfo","Burger","BuildControls","purchasable","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88123cb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadBottom\":\"BurgerIngredient_breadBottom__udEa9\",\"breadTop\":\"BurgerIngredient_breadTop__3sLv8\",\"seeds1\":\"BurgerIngredient_seeds1__2hSZp\",\"seeds2\":\"BurgerIngredient_seeds2__2L8NL\",\"meat\":\"BurgerIngredient_meat__2ZZU0\",\"cheese\":\"BurgerIngredient_cheese__HnUNk\",\"salad\":\"BurgerIngredient_salad__1iGY9\",\"bacon\":\"BurgerIngredient_bacon__tFQN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControl\":\"BuildControl_buildControl__11Ba1\",\"label\":\"BuildControl_label__1Uevy\",\"less\":\"BuildControl_less__2hxbJ\",\"more\":\"BuildControl_more__37Pf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buildControls\":\"BuildControls_buildControls__11sGI\",\"orderButton\":\"BuildControls_orderButton__3zxAF\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"layout_content__31sLk\",\"padding\":\"layout_padding__35I6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Burger_burger__y4b7K\"};","// Higher Order Component\nconst aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport styles from './layout.module.css';\n\nconst layout = (props) => (\n     <Aux>\n          <div>Toolbar, SideDrawer, Backdrop</div>\n          <main className={styles.content}>\n               {props.children}\n          </main>\n     </Aux>\n); \n\nexport default layout;","import React, { Component } from 'react';\nimport style from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n     render() {\n          let ingredient = null;\n\n          switch (this.props.type) {\n               case ('bread-bottom'):\n               ingredient = <div className={style.breadBottom}></div>;\n                    break;\n               case ('bread-top'):\n                    ingredient = (\n                         <div className={style.breadTop}>\n                              <div className={style.seeds1}></div>\n                              <div className={style.seeds2}></div>\n                         </div>\n                    );\n                    break;\n               case ('meat'):\n                    ingredient = <div className={style.meat}></div>\n                    break;\n               case ('cheese'):\n                    ingredient = <div className={style.cheese}></div>\n                    break;\n               case ('bacon'):\n                    ingredient = <div className={style.bacon}></div>\n                    break;\n               case ('salad'):\n                    ingredient = <div className={style.salad}></div>\n                    break;\n               default:\n                    ingredient = null;\n          }\n          return ingredient;\n     }\n}\n\nBurgerIngredient.propTypes = {\n     type: PropTypes.string.isRequired\n}; \n\nexport default BurgerIngredient;","import React from 'react';\nimport style from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients'\n\nconst burger = (props) => {\n\n    //Keys returns an array which we can now map\n    let transformedIngredients = Object.keys(props.ingredients)\n        //igKey is the key in the map used in the array\n        .map(igKey => {\n            //Use the spread operator (...)\n            return [...Array(props.ingredients[igKey])]\n                // The _ is blank, don't care about that argument, but we care about index (i)\n                .map((_, i) => {\n                    return <BurgerIngredient key={igKey + i} type={igKey} />\n                });\n            })\n                //Flatten the array to only create JSON with values.\n                .reduce((arr, el) => {\n                    return arr.concat(el)\n                }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding some ingredients.</p>\n    }\n     return (\n          <div className={style.burger}>\n               <BurgerIngredient type=\"bread-top\"/>\n                {transformedIngredients}\n               <BurgerIngredient type=\"bread-bottom\"/>\n          </div>\n     );\n};\n\nexport default burger;","import React from 'react';\nimport styles from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={styles.buildControl}>\n        <div className={styles.label}>{props.label}</div>\n        <button className={styles.less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={styles.more} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport styles from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad'},\n    { label: 'Bacon', type: 'bacon'},\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'},\n];\n\nconst buildControls = (props) => (\n    <div className={styles.buildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>\n        ))}\n        <button className={styles.orderButton}\n        disabled={!props.purchaseAble}>Order Now</button>\n    </div>\n);\n\nexport default buildControls;","import React, {Component} from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\n//Global variable (Global variables are in capitals)\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n    //This is an object, not an array, need to convert this using Object Mapping to an Array.\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4.0,\n        purchaseAble: false\n    }\n\n    updatePurchaseState(ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n            return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        this.setState({purchaseAble: sum > 0});\n        console.log(\"I'm called\")\n    }\n\n    addIngredientHandler = (type) => {\n        //Yes you can do this in less lines, but for training purposes it's laid out simple.\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        //Yes you can do this in less lines, but for training purposes it's laid out simple.\n        const oldCount = this.state.ingredients[type];\n        // Stops crashes if less than zero ingredients.\n        if(oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients})\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n     render() {\n        const disabledInfo = {\n            // This is a copy of the state for ingredients.\n            ...this.state.ingredients\n        }\n        for (let key in disabledInfo) {\n            // Will update disabledInfo state with true or false\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n          return (\n               <Aux>\n                    <Burger ingredients={this.state.ingredients}/>\n                    <BuildControls\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchaseAble}\n                    disabled={disabledInfo}/>\n               </Aux>\n          );\n     }\n}\n\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n            <BurgerBuilder/>\n        </Layout>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}